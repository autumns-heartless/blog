import{_ as a,o as e,c as o,a5 as l}from"./chunks/framework.D7FFOASs.js";const i="/blog/assets/-ve_IyeaGzf-I0U5BGfPaDXBCg_7OuEFrTWtEBHfqUM.B11lySs4.png",t="/blog/assets/rgoeRB662FvgWb43JOmG_JjKkZQds2EqyVta5favOvo.DaoI92dB.png",r="/blog/assets/wgOMvKVJnT-UQ2YiLrGC4yuBFBxW4eZR79FVIgtPheI.BZn0b0hC.png",s="/blog/assets/5ARx9KwrZ61pYXmPwAU0HNcfX8w6pW5EgT9fYg9RmEo.BJySjBBi.png",d="/blog/assets/Do9TzbkBfMNcEhzogdFTP0pXRS8BOwzscnULY8aUfPg.AIkg-lzf.png",c="/blog/assets/Zr9_s-wNWDMlG3gODGzfKFpHPQom4UMnvZgt-LaHGl0.BcA7X2w0.png",n="/blog/assets/yAcM3rZcqEcEC6aPJTDPoNEXtMY6Q_HL8ZR5g6RS3lU.A0rlWJ1w.png",p="/blog/assets/QGFRPZuuuaTH6yruWeHISD7Fbbm_S1IcgrIC2SEuFQ4.BYQ__70y.gif",h="/blog/assets/QWoJ-tMn4FiNISqp0Q_d3H-VGlz6roJ_JEo5rY1wvVs.DSjm4_BE.gif",g="/blog/assets/oCvVaKYl9H0lSbqXKqXEi1TfvP6R4tz9ZMFOdWWQWjY.BVdTVBH4.gif",m="/blog/assets/zhl5Fwk3fU4NCfNyn4yi25016937AHmJ9_rM-Zd0ANY.Bsnm2lzi.gif",_="/blog/assets/4R0_LP6SoFJjm2Cf-Ucaw4DFwaAv_FrLnPic2Sivkg.HTOB8wDy.gif",u="/blog/assets/ZqYwfhz8cUpUEQldT_e8ISolXueImzvpo7uXViT-wE.ClOJbT2p.gif",b="/blog/assets/G_aamEcJ9aLotKvw7HzPPc9EnnMp7UiHQ-iJ9Ey2GsM.eJw_RSDU.gif",f="/blog/assets/QVKDvCKgUrJFr6dYlAsDsWaoP7QlVaxUItlxyUzZR0g.Bxc2VWlk.gif",q="/blog/assets/W7r2zdeRRAalgwDsneGer6owMwo50I1CQwcsRH29ICQ.DMgWWwNF.gif",v=JSON.parse('{"title":"函数地图（fnMap）","description":"","frontmatter":{},"headers":[],"relativePath":"other/tjq/fnMap.md","filePath":"other/tjq/fnMap.md","lastUpdated":1721728572000}'),P={name:"other/tjq/fnMap.md"},k=l('<h1 id="函数地图-fnmap" tabindex="-1">函数地图（fnMap） <a class="header-anchor" href="#函数地图-fnmap" aria-label="Permalink to &quot;函数地图（fnMap）&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>不知道大家有没有发现，有时候在写代码的时候，需要频繁地编辑多个地方的代码。而当代码体积比较大的时候，我们找起来某个关键字很麻烦，只能通过来回滚动鼠标，或者是查看左边的小地图来，浪费时间不说，也让编程体验大打折扣。后面，VSCode 推出了大纲（outline），但是功能非常简单，并没有很好地解决问题。</p><p><img src="'+i+'" alt="image" loading="lazy"></p><p>VSCode 自带大纲</p><p>比如不支持关键字搜索，不支持一键折叠展开，不支持符号置顶，标记等等。</p><p>为了改善这个问题，我找到了一个 vscode 插件，来更好的解决这个问题</p><h2 id="fnmap-函数地图" tabindex="-1">FnMap（函数地图） <a class="header-anchor" href="#fnmap-函数地图" aria-label="Permalink to &quot;FnMap（函数地图）&quot;">​</a></h2><p><img src="'+t+'" alt="image" loading="lazy"></p><p>这个插件很好的解决了以上问题，</p><h2 id="如何下载" tabindex="-1">如何下载 <a class="header-anchor" href="#如何下载" aria-label="Permalink to &quot;如何下载&quot;">​</a></h2><p>首先，打开 vscode 插件市场，搜索 <strong>FnMap（<strong>该扩展需要 <code>vscode 1.74</code> 或更高版本才能使用。</strong>）</strong></p><p><img src="'+r+'" alt="image" loading="lazy"></p><p>下载完成后，为了跟快捷的使用它，我们将他放入右侧拓展栏</p><ul><li>点击右侧辅助侧栏</li></ul><p><img src="'+s+'" alt="image" loading="lazy"></p><ul><li>再将<strong>FnMap</strong>插件图标拖到右侧辅助侧栏（这边可以设置快捷键，来快捷打开右侧辅助栏）</li></ul><p><img src="'+d+'" alt="image" loading="lazy"></p><p>以上就是安装教程</p><h2 id="⚠️-注意事项" tabindex="-1">⚠️ 注意事项 <a class="header-anchor" href="#⚠️-注意事项" aria-label="Permalink to &quot;⚠️ 注意事项&quot;">​</a></h2><p>该插件是需要收费的，但是插件作者免费赠送一个 <code>永久注册码</code>，可以绑定一台电脑永久使用（无需付费）。</p><ul><li>注册码与计算机的机器码绑定，每个注册码只能在绑定的计算机上使用。</li><li>不同的电脑有不同的序列号，需要单独绑定。</li><li>CPU 等核心硬件更换后，机器码也可能发生变化。</li><li>每个用户可以无限制地购买多个注册码，给同事，朋友绑定使用皆可。</li><li>永久注册码一经生成，平台也无法解绑，所以购买后不支持退款，请知悉</li></ul><h2 id="如何获取注册码" tabindex="-1">如何获取注册码 <a class="header-anchor" href="#如何获取注册码" aria-label="Permalink to &quot;如何获取注册码&quot;">​</a></h2><ul><li>点击小人图标，关注作者公众号即可登录成功</li></ul><p><img src="'+c+'" alt="image" loading="lazy"></p><ul><li>进去以后点击领取，自动领取注册码后，在点击本机一键启用，即注册成功</li></ul><p><img src="'+n+'" alt="image" loading="lazy"></p><ul><li></li></ul><h1 id="插件特点" tabindex="-1">插件特点 <a class="header-anchor" href="#插件特点" aria-label="Permalink to &quot;插件特点&quot;">​</a></h1><h2 id="🎲-功能特点" tabindex="-1">🎲 功能特点 <a class="header-anchor" href="#🎲-功能特点" aria-label="Permalink to &quot;🎲 功能特点&quot;">​</a></h2><ul><li><code>标记功能</code>，完美替代  <code>bookmark</code>  相关插件</li><li><code>支持所有编程语言</code> (如不支持，可下载对应的编程语言插件)</li><li><code>离线</code>、<code>内网</code>、<code>无网</code>  状态下均可正常使用</li><li><code>彩色</code>  图标进行符号区分，更直观</li><li>切换文件，记住函数列表的  <code>展开/关闭</code>  状态</li><li><code>左右箭头</code>  方便切换当前文档的所有符号显示级别</li><li><code>单击</code>  可快速定位到符号位置</li><li><code>左右箭头</code>  切换当前文档的折叠级别，方便查看长文件</li><li>支持  <code>位置升序</code>、<code>名称升序</code>、<code>名称降序</code>  等排序操作</li><li><code>置顶</code>  功能，方便在多处修改之间反复横跳</li><li><code>关键字</code>  搜索功能，快速找到需要的函数</li><li>可直接在编辑器进行  <code>注册</code>、<code>登录</code>、<code>购买</code>、<code>绑定</code>  等操作</li><li>可配置  <code>不同文件</code>  的  <code>默认展示层级</code></li><li>可自定义  <code>某层级</code>  的符号  <code>是否显示</code></li></ul><h1 id="插件快捷键" tabindex="-1">插件快捷键 <a class="header-anchor" href="#插件快捷键" aria-label="Permalink to &quot;插件快捷键&quot;">​</a></h1><h2 id="📐-快捷键" tabindex="-1">📐 快捷键 <a class="header-anchor" href="#📐-快捷键" aria-label="Permalink to &quot;📐 快捷键&quot;">​</a></h2><ul><li><code>alt+m</code>  切换标记行。</li><li><code>alt+n</code>  命名标记行。</li><li><code>alt+左箭头</code>  折叠符号树。</li><li><code>alt+右箭头</code>  展开符号树。</li></ul><h1 id="功能演示" tabindex="-1">功能演示 <a class="header-anchor" href="#功能演示" aria-label="Permalink to &quot;功能演示&quot;">​</a></h1><h2 id="🎨-效果演示" tabindex="-1">🎨 效果演示 <a class="header-anchor" href="#🎨-效果演示" aria-label="Permalink to &quot;🎨 效果演示&quot;">​</a></h2><h3 id="✅-编辑区折叠和展开" tabindex="-1">✅ 编辑区折叠和展开 <a class="header-anchor" href="#✅-编辑区折叠和展开" aria-label="Permalink to &quot;✅ 编辑区折叠和展开&quot;">​</a></h3><p><img src="'+p+'" alt="image" loading="lazy"></p><p>编辑区折叠和展开</p><h3 id="✅-符号区折叠和展开" tabindex="-1">✅ 符号区折叠和展开 <a class="header-anchor" href="#✅-符号区折叠和展开" aria-label="Permalink to &quot;✅ 符号区折叠和展开&quot;">​</a></h3><p><img src="'+h+'" alt="image" loading="lazy"></p><p>符号区折叠和展开</p><h3 id="✅-符号快捷跳转" tabindex="-1">✅ 符号快捷跳转 <a class="header-anchor" href="#✅-符号快捷跳转" aria-label="Permalink to &quot;✅ 符号快捷跳转&quot;">​</a></h3><p><img src="'+g+'" alt="image" loading="lazy"></p><p>符号快捷跳转</p><h3 id="✅-当前文件符号置顶" tabindex="-1">✅ 当前文件符号置顶 <a class="header-anchor" href="#✅-当前文件符号置顶" aria-label="Permalink to &quot;✅ 当前文件符号置顶&quot;">​</a></h3><p><img src="'+m+'" alt="image" loading="lazy"></p><p>当前文件符号置顶</p><h3 id="✅-跨文件文件符号置顶" tabindex="-1">✅ 跨文件文件符号置顶 <a class="header-anchor" href="#✅-跨文件文件符号置顶" aria-label="Permalink to &quot;✅ 跨文件文件符号置顶&quot;">​</a></h3><p><img src="'+_+'" alt="image" loading="lazy"></p><p>跨文件文件符号置顶</p><h3 id="✅-标记当前行" tabindex="-1">✅ 标记当前行 <a class="header-anchor" href="#✅-标记当前行" aria-label="Permalink to &quot;✅ 标记当前行&quot;">​</a></h3><p><img src="'+u+'" alt="image" loading="lazy"></p><p>标记当前行</p><h3 id="✅-标记当前行-带标签" tabindex="-1">✅ 标记当前行（带标签） <a class="header-anchor" href="#✅-标记当前行-带标签" aria-label="Permalink to &quot;✅ 标记当前行（带标签）&quot;">​</a></h3><p><img src="'+b+'" alt="image" loading="lazy"></p><p>标记当前行（带标签）</p><h3 id="✅-符号排序" tabindex="-1">✅ 符号排序 <a class="header-anchor" href="#✅-符号排序" aria-label="Permalink to &quot;✅ 符号排序&quot;">​</a></h3><p><img src="'+f+'" alt="image" loading="lazy"></p><p>符号排序</p><h3 id="✅-搜索符号关键字" tabindex="-1">✅ 搜索符号关键字 <a class="header-anchor" href="#✅-搜索符号关键字" aria-label="Permalink to &quot;✅ 搜索符号关键字&quot;">​</a></h3><p><img src="'+q+'" alt="image" loading="lazy"></p>',62),z=[k];function y(x,M,B,w,F,S){return e(),o("div",{"data-pagefind-body":!0},z)}const T=a(P,[["render",y]]);export{v as __pageData,T as default};
