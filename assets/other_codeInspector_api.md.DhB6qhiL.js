import{_ as r,B as t,c as o,o as h,G as a,j as i,a3 as l,a as e}from"./chunks/framework.BCX6QadF.js";const w=JSON.parse('{"title":"code-inspector 之 API","description":"","frontmatter":{"author":"周立翔","reprinted":true,"title":"code-inspector 之 API","date":"2024/09/20","words":1571,"duration":6,"categories":["项目依赖"],"tags":["项目依赖"]},"headers":[],"relativePath":"other/codeInspector/api.md","filePath":"other/codeInspector/api.md","lastUpdated":1726993907000}'),k={name:"other/codeInspector/api.md"},c={id:"behavior",tabindex:"-1"},u={id:"injectto",tabindex:"-1"},g={id:"dev",tabindex:"-1"},b={id:"enforcepre",tabindex:"-1"},y={id:"match",tabindex:"-1"},m={id:"pathformat",tabindex:"-1"},E={id:"openin",tabindex:"-1"},F={id:"needenvinspector",tabindex:"-1"},A={id:"forceinjectcache",tabindex:"-1"},v={id:"hooks",tabindex:"-1"},D={id:"escapetags",tabindex:"-1"},f={id:"hidedompathattr",tabindex:"-1"},C={id:"ip",tabindex:"-1"},x={id:"importclient",tabindex:"-1"};function B(T,s,P,I,S,_){const p=t("BackTop"),d=t("ArticleMetadata"),n=t("Badge");return h(),o("div",{"data-pagefind-body":!0},[a(p),s[42]||(s[42]=i("h1",{id:"api",tabindex:"-1"},[e("API "),i("a",{class:"header-anchor",href:"#api","aria-label":'Permalink to "API"'},"​")],-1)),a(d,{article:{}}),s[43]||(s[43]=l(`<p><code>codeInspectorPlugin</code> 的详细参数配置如下所示：</p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { codeInspectorPlugin } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;code-inspector-plugin&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bundler: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;vite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">codeInspectorPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CodeInspectorOptins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  bunlder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;webpack&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;rspack&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 其他属性见下方说明...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="bundler" tabindex="-1">bundler <a class="header-anchor" href="#bundler" aria-label="Permalink to &quot;bundler&quot;">​</a></h2><ul><li>必传项</li><li>类型：<code>string</code>，可选值有 <code>vite/webpack/rspack</code></li><li>说明：指定的打包工具类型</li></ul><h2 id="hotkeys" tabindex="-1">hotKeys <a class="header-anchor" href="#hotkeys" aria-label="Permalink to &quot;hotKeys&quot;">​</a></h2><ul><li>可选项。默认值为 <code>[&#39;altKey&#39;, &#39;shiftKey&#39;]</code></li><li>类型：<code>false</code> 或 <code>string[]</code>。类型为数组时，数组项的可选值为: <code>ctrlKey</code>、<code>altKey</code>、<code>metaKey</code>、<code>shiftKey</code></li><li>说明：触发功能的组合键，为 <code>false</code> 或者空数组则关闭组合键触发功能。(<code>ctrlKey</code> 对应 Mac 中的 <code>control</code> 键；<code>altKey</code> 对应 Mac 中的 <code>option</code> 键；<code>metaKey</code> 对应 Mac 中的 <code>command</code> 键)</li></ul><h2 id="showswitch" tabindex="-1">showSwitch <a class="header-anchor" href="#showswitch" aria-label="Permalink to &quot;showSwitch&quot;">​</a></h2><ul><li>可选项。默认值为 <code>false</code></li><li>类型：<code>boolean</code></li><li>说明: 是否在页面展示一个控制源码定位功能的开关，开关打开时和按住组合键的效果是相同的(更推荐使用组件键触发功能)</li></ul><h2 id="autotoggle" tabindex="-1">autoToggle <a class="header-anchor" href="#autotoggle" aria-label="Permalink to &quot;autoToggle&quot;">​</a></h2><ul><li>可选项。默认值为 <code>true</code></li><li>类型：<code>boolean</code></li><li>说明：当配置了 <code>showSwitch: true, autoToggloe: true</code> 时，触发功能跳转 IDE 后，会自动将 <code>switch</code> 的功能关闭，主要是为了防止用户切会页面后鼠标点击直接误触发功能</li></ul>`,10)),i("h2",c,[s[0]||(s[0]=e("behavior ")),a(n,{type:"tip",text:"0.7.0+",vertical:"middle"}),s[1]||(s[1]=e()),s[2]||(s[2]=i("a",{class:"header-anchor",href:"#behavior","aria-label":'Permalink to "behavior <Badge type="tip" text="0.7.0+" vertical="middle" />"'},"​",-1))]),s[44]||(s[44]=l(`<ul><li>可选项。指定插件功能触发的行为</li><li>类型及说明如下：<div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Behavior</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * 是否启用点击跳转 IDE 定位代码的功能(默认为 true)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  locate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * 是否启动点击复制源代码位置信息(默认为 true)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * 也可以设置字符串并通过 {file}、{line}、{column} 模版去指定要复制的信息格式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * 默认值 true 相当于 &quot;{file}:{line}:{column}&quot; 的字符串格式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  copy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li></ul><h2 id="editor" tabindex="-1">editor <a class="header-anchor" href="#editor" aria-label="Permalink to &quot;editor&quot;">​</a></h2><ul><li>可选项。默认值为 <code>undefined</code></li><li>类型：<code>string | undefined</code>，可选值有 <code>atom / code / code_insiders / idea / phpstorm / pycharm / webstorm / hbuilder</code></li><li>说明：插件默认会自动识别当前系统中运行的 IDE，设置此项时，会打开指定的 IDE（对于指定 IDE 更推荐使用<a href="./ide">指定 IDE</a>章节的方式）</li></ul>`,3)),i("h2",u,[s[3]||(s[3]=e("injectTo ")),a(n,{type:"tip",text:"0.5.0+",vertical:"middle"}),s[4]||(s[4]=e()),s[5]||(s[5]=i("a",{class:"header-anchor",href:"#injectto","aria-label":'Permalink to "injectTo <Badge type="tip" text="0.5.0+" vertical="middle" />"'},"​",-1))]),s[45]||(s[45]=i("ul",null,[i("li",null,[e("可选项。默认值为 "),i("code",null,"auto")]),i("li",null,[e("类型："),i("code",null,"string")]),i("li",null,[e("说明：用于注入 DOM 筛选和点击跳转 vscode 的相关的 "),i("code",null,"client code"),e(" 代码的文件(必须为绝对路径且以 "),i("code",null,".js/.ts/.mjs/.mts/.jsx/.tsx"),e(" 为结尾的文件)。(通常用于 SSR 项目中指定一个 client 端的文件)。")])],-1)),i("h2",g,[s[6]||(s[6]=e("dev ")),a(n,{type:"tip",text:"0.5.0+",vertical:"middle"}),s[7]||(s[7]=e()),s[8]||(s[8]=i("a",{class:"header-anchor",href:"#dev","aria-label":'Permalink to "dev <Badge type="tip" text="0.5.0+" vertical="middle" />"'},"​",-1))]),s[46]||(s[46]=i("ul",null,[i("li",null,"可选项"),i("li",null,[e("类型："),i("code",null,"boolean | (() => boolean)")]),i("li",null,[e("说明：自定义 development 环境的判断。（插件内部会识别 "),i("code",null,"development"),e(" 环境以让插件生效，如果自动识别失败，需要手动指定）")])],-1)),i("h2",b,[s[9]||(s[9]=e("enforcePre ")),a(n,{type:"tip",text:"0.4.0+",vertical:"middle"}),s[10]||(s[10]=e()),s[11]||(s[11]=i("a",{class:"header-anchor",href:"#enforcepre","aria-label":'Permalink to "enforcePre <Badge type="tip" text="0.4.0+" vertical="middle" />"'},"​",-1))]),s[47]||(s[47]=l("<ul><li>可选项(仅对 <code>webpack/rspack</code> 生效)。默认值为 <code>true</code></li><li>类型：<code>boolean</code></li><li>说明：是否在转换时添加 <code>enforce: &#39;pre&#39;</code>，默认值为 <code>true</code>。（若因该插件引起了 <code>eslint-plugin</code> 校验错误或者热跟新时 eslint 的重复校验，需要此项设置为 <code>false</code>）。</li></ul>",1)),i("h2",y,[s[12]||(s[12]=e("match ")),a(n,{type:"tip",text:"0.5.0+",vertical:"middle"}),s[13]||(s[13]=e()),s[14]||(s[14]=i("a",{class:"header-anchor",href:"#match","aria-label":'Permalink to "match <Badge type="tip" text="0.5.0+" vertical="middle" />"'},"​",-1))]),s[48]||(s[48]=i("ul",null,[i("li",null,"可选项。用于提升编译时性能"),i("li",null,[e("类型："),i("code",null,"RegExp")]),i("li",null,[e("说明：仅对符合 "),i("code",null,"match"),e(" 正则表达式的文件会进行源码定位编译，以减少无效文件参与编译，默认为 "),i("code",null,"/\\.(vue|jsx|tsx|js|ts|mjs|mts)$/")])],-1)),i("h2",m,[s[15]||(s[15]=e("pathFormat ")),a(n,{type:"tip",text:"0.8.0+",vertical:"middle"}),s[16]||(s[16]=e()),s[17]||(s[17]=i("a",{class:"header-anchor",href:"#pathformat","aria-label":'Permalink to "pathFormat <Badge type="tip" text="0.8.0+" vertical="middle" />"'},"​",-1))]),s[49]||(s[49]=l("<blockquote><p>团队协作时推荐在 <code>.env.local</code> 中使用 <code>CODE_INSPECTOR_FORMAT_PATH</code> 定义本功能，避免影响其他人使用</p></blockquote><ul><li>可选项</li><li>类型：<code>string | string[]</code></li><li>说明：指定打开 IDE 文件时的命令格式，默认值为 <code>{file}:{line}:{column}</code>，其中， <code>{file}</code>、<code>{line}</code>、<code>{column}</code> 会作为模版被动态替换。例如文件的源代码在 <code>/root/my-project/index.ts</code> 的第 <code>5</code> 行第 <code>11</code> 列，默认 vscode 执行的命令为 <code>code -g /root/my-project/index.ts:5:11</code>；如果我想只定位到对应的文件，不需要具体行列，且在文件最前面加上 <code>/Users</code> 参数，则应该设置此项值为 <code>&quot;/Users{file}&quot;</code>；如果我要额外添加 vscode 的参数去在新窗口打开，则设置此项值为 <code>[&quot;-n&quot;, &quot;/Users{file}&quot;]</code>。</li></ul>",2)),i("h2",E,[s[18]||(s[18]=e("openIn ")),a(n,{type:"tip",text:"0.8.0+",vertical:"middle"}),s[19]||(s[19]=e()),s[20]||(s[20]=i("a",{class:"header-anchor",href:"#openin","aria-label":'Permalink to "openIn <Badge type="tip" text="0.8.0+" vertical="middle" />"'},"​",-1))]),s[50]||(s[50]=i("ul",null,[i("li",null,"可选项"),i("li",null,[e("类型："),i("code",null,"'reuse' | 'new'")]),i("li",null,[e("说明：指定打开 IDE 窗口的方式，默认会自动复用当前窗口，传 "),i("code",null,"reuse"),e(" 则复用当前窗口；传 "),i("code",null,"new"),e(" 则打开新窗口。")])],-1)),i("h2",F,[s[21]||(s[21]=e("needEnvInspector ")),a(n,{type:"danger",text:"已废弃",vertical:"middle"}),s[22]||(s[22]=e()),s[23]||(s[23]=i("a",{class:"header-anchor",href:"#needenvinspector","aria-label":'Permalink to "needEnvInspector <Badge type="danger" text="已废弃" vertical="middle" />"'},"​",-1))]),s[51]||(s[51]=l('<ul><li>可选项。默认值为 <code>false</code></li><li>类型：<code>boolean</code></li><li>说明：对于大多数人可以忽略这个配置。为 <code>true</code> 时，仅当 <code>.env.local</code> 文件存在且其包含 <code>CODE_INSPECTOR=true</code> 时插件功能才生效。（主要是解决团队内有部分成员不想使用该插件功能的需求）</li></ul><h2 id="hideconsole" tabindex="-1">hideConsole <a class="header-anchor" href="#hideconsole" aria-label="Permalink to &quot;hideConsole&quot;">​</a></h2><ul><li>可选项。默认值为 <code>false</code></li><li>类型：<code>boolean</code></li><li>说明：默认情况下，插件在项目首次启动时会在浏览器控制台打印一行组合键按键的提示，设置此项为 <code>true</code> 可以禁用打印</li></ul>',3)),i("h2",A,[s[24]||(s[24]=e("forceInjectCache ")),a(n,{type:"danger",text:"已废弃",vertical:"middle"}),s[25]||(s[25]=e()),s[26]||(s[26]=i("a",{class:"header-anchor",href:"#forceinjectcache","aria-label":'Permalink to "forceInjectCache <Badge type="danger" text="已废弃" vertical="middle" />"'},"​",-1))]),s[52]||(s[52]=l("<ul><li>可选项(仅对 <code>webpack/rspack</code> 生效)。用于提升编译时性能</li><li>类型：<code>boolean</code></li><li>说明：强制设置 <code>webpack/rspack</code> 交互注入逻辑的 loader 的缓存策略；为 true 时全缓存；为 false 时全不缓存；不设置则自动判断仅对入口文件不缓存，其余文件缓存。(设置此项为 <code>true</code> 时，可能导致无法启动 node server 引起的代码定位请求失败，慎用)。<b>升级到 <code>0.5.1</code> 版本后，优化了该缓存策略，不再需要设置此字段。</b></li></ul>",1)),i("h2",v,[s[27]||(s[27]=e("hooks ")),a(n,{type:"tip",text:"0.10.0+",vertical:"middle"}),s[28]||(s[28]=e()),s[29]||(s[29]=i("a",{class:"header-anchor",href:"#hooks","aria-label":'Permalink to "hooks <Badge type="tip" text="0.10.0+" vertical="middle" />"'},"​",-1))]),s[53]||(s[53]=l(`<ul><li>可选项。默认值为 <code>null</code></li><li>类型如下：<div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SourceInfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  line</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  column</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Hooks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * server 端接收到 DOM 源代码定位请求后的钩子函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  afterInspectRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CodeInspectorOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">source</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SourceInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 例如</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">codeInspectorPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  bundler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  hooks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    afterInspectRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      console</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div></li><li>说明：设置 <code>code-inspector-plugin</code> 某些生命周期的 hooks 回调</li></ul>`,1)),i("h2",D,[s[30]||(s[30]=e("escapeTags ")),a(n,{type:"tip",text:"0.11.0+",vertical:"middle"}),s[31]||(s[31]=e()),s[32]||(s[32]=i("a",{class:"header-anchor",href:"#escapetags","aria-label":'Permalink to "escapeTags <Badge type="tip" text="0.11.0+" vertical="middle" />"'},"​",-1))]),s[54]||(s[54]=i("ul",null,[i("li",null,"可选项"),i("li",null,[e("类型："),i("code",null,"(string | RegExp)[]")]),i("li",null,[e("说明：满足上述数组的标签，不会在编译时注入 "),i("code",null,"data-insp-path"),e(" 属性，以用于解决某些场景的告警问题。")])],-1)),i("h2",f,[s[33]||(s[33]=e("hideDomPathAttr ")),a(n,{type:"tip",text:"0.12.0+",vertical:"middle"}),s[34]||(s[34]=e()),s[35]||(s[35]=i("a",{class:"header-anchor",href:"#hidedompathattr","aria-label":'Permalink to "hideDomPathAttr <Badge type="tip" text="0.12.0+" vertical="middle" />"'},"​",-1))]),s[55]||(s[55]=i("ul",null,[i("li",null,"可选项"),i("li",null,[e("类型："),i("code",null,"boolean"),e("。默认值 "),i("code",null,"false")]),i("li",null,[e("说明：是否隐藏 DOM 元素上的 "),i("code",null,"data-insp-path"),e(" 属性")])],-1)),i("h2",C,[s[36]||(s[36]=e("ip ")),a(n,{type:"tip",text:"0.13.0+",vertical:"middle"}),s[37]||(s[37]=e()),s[38]||(s[38]=i("a",{class:"header-anchor",href:"#ip","aria-label":'Permalink to "ip <Badge type="tip" text="0.13.0+" vertical="middle" />"'},"​",-1))]),s[56]||(s[56]=l("<ul><li>可选项</li><li>类型：<code>boolean | string</code>。默认值 <code>false</code></li><li>说明：是否通过 ip 的方式向 node server 发送请求。默认值为 <code>false</code>，通过 <code>localhost</code> 发送请求；设置为 <code>true</code> 时，会自动检测本地的 ip，通过 ip 发送请求；指定为 <code>string</code> 类型时，通过指定的值发送请求</li></ul>",1)),i("h2",x,[s[39]||(s[39]=e("importClient ")),a(n,{type:"tip",text:"0.14.1+",vertical:"middle"}),s[40]||(s[40]=e()),s[41]||(s[41]=i("a",{class:"header-anchor",href:"#importclient","aria-label":'Permalink to "importClient <Badge type="tip" text="0.14.1+" vertical="middle" />"'},"​",-1))]),s[57]||(s[57]=i("ul",null,[i("li",null,"可选项"),i("li",null,[e("类型："),i("code",null,"string"),e("。默认值为 "),i("code",null,"file")]),i("li",null,[e("说明：引入客户端交互代码的方式: "),i("code",null,"file"),e(" 为引入交互代码所在的文件; "),i("code",null,"code"),e(" 为直接将交互代码注入页面。")])],-1))])}const V=r(k,[["render",B]]);export{w as __pageData,V as default};
