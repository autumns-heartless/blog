import{_ as l,D as t,o as p,c as d,j as s,a as i,I as a,a9 as n}from"./chunks/framework.tFiMJeNL.js";const ps=JSON.parse('{"title":"API","description":"","frontmatter":{},"headers":[],"relativePath":"other/codeInspector/api.md","filePath":"other/codeInspector/api.md","lastUpdated":1721896051000}'),o={name:"other/codeInspector/api.md"},h=n(`<h1 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h1><p><code>codeInspectorPlugin</code> 的详细参数配置如下所示：</p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { codeInspectorPlugin } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;code-inspector-plugin&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bundler: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;vite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">codeInspectorPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CodeInspectorOptins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  bunlder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;webpack&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;rspack&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 其他属性见下方说明...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="bundler" tabindex="-1">bundler <a class="header-anchor" href="#bundler" aria-label="Permalink to &quot;bundler&quot;">​</a></h2><ul><li>必传项</li><li>类型：<code>string</code>，可选值有 <code>vite/webpack/rspack</code></li><li>说明：指定的打包工具类型</li></ul><h2 id="hotkeys" tabindex="-1">hotKeys <a class="header-anchor" href="#hotkeys" aria-label="Permalink to &quot;hotKeys&quot;">​</a></h2><ul><li>可选项。默认值为 <code>[&#39;altKey&#39;, &#39;shiftKey&#39;]</code></li><li>类型：<code>false</code> 或 <code>string[]</code>。类型为数组时，数组项的可选值为: <code>ctrlKey</code>、<code>altKey</code>、<code>metaKey</code>、<code>shiftKey</code></li><li>说明：触发功能的组合键，为 <code>false</code> 或者空数组则关闭组合键触发功能。(<code>ctrlKey</code> 对应 Mac 中的 <code>control</code> 键；<code>altKey</code> 对应 Mac 中的 <code>option</code> 键；<code>metaKey</code> 对应 Mac 中的 <code>command</code> 键)</li></ul><h2 id="showswitch" tabindex="-1">showSwitch <a class="header-anchor" href="#showswitch" aria-label="Permalink to &quot;showSwitch&quot;">​</a></h2><ul><li>可选项。默认值为 <code>false</code></li><li>类型：<code>boolean</code></li><li>说明: 是否在页面展示一个控制源码定位功能的开关，开关打开时和按住组合键的效果是相同的(更推荐使用组件键触发功能)</li></ul><h2 id="autotoggle" tabindex="-1">autoToggle <a class="header-anchor" href="#autotoggle" aria-label="Permalink to &quot;autoToggle&quot;">​</a></h2><ul><li>可选项。默认值为 <code>true</code></li><li>类型：<code>boolean</code></li><li>说明：当配置了 <code>showSwitch: true, autoToggloe: true</code> 时，触发功能跳转 IDE 后，会自动将 <code>switch</code> 的功能关闭，主要是为了防止用户切会页面后鼠标点击直接误触发功能</li></ul>`,11),c={id:"behavior",tabindex:"-1"},r=s("a",{class:"header-anchor",href:"#behavior","aria-label":'Permalink to "behavior <Badge type="tip" text="0.7.0+" vertical="middle" />"'},"​",-1),k=n(`<ul><li>可选项。指定插件功能触发的行为</li><li>类型及说明如下：<div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Behavior</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * 是否启用点击跳转 IDE 定位代码的功能(默认为 true)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  locate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * 是否启动点击复制源代码位置信息(默认为 true)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * 也可以设置字符串并通过 {file}、{line}、{column} 模版去指定要复制的信息格式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * 默认值 true 相当于 &quot;{file}:{line}:{column}&quot; 的字符串格式</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  copy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li></ul><h2 id="editor" tabindex="-1">editor <a class="header-anchor" href="#editor" aria-label="Permalink to &quot;editor&quot;">​</a></h2><ul><li>可选项。默认值为 <code>undefined</code></li><li>类型：<code>string | undefined</code>，可选值有 <code>atom / code / code_insiders / idea / phpstorm / pycharm / webstorm / hbuilder</code></li><li>说明：插件默认会自动识别当前系统中运行的 IDE，设置此项时，会打开指定的 IDE（对于指定 IDE 更推荐使用<a href="./ide">指定 IDE</a>章节的方式）</li></ul>`,3),u={id:"injectto",tabindex:"-1"},_=s("a",{class:"header-anchor",href:"#injectto","aria-label":'Permalink to "injectTo <Badge type="tip" text="0.5.0+" vertical="middle" />"'},"​",-1),g=s("ul",null,[s("li",null,[i("可选项。默认值为 "),s("code",null,"auto")]),s("li",null,[i("类型："),s("code",null,"string")]),s("li",null,[i("说明：用于注入 DOM 筛选和点击跳转 vscode 的相关的 "),s("code",null,"client code"),i(" 代码的文件(必须为绝对路径且以 "),s("code",null,".js/.ts/.mjs/.mts/.jsx/.tsx"),i(" 为结尾的文件)。(通常用于 SSR 项目中指定一个 client 端的文件)。")])],-1),b={id:"dev",tabindex:"-1"},y=s("a",{class:"header-anchor",href:"#dev","aria-label":'Permalink to "dev <Badge type="tip" text="0.5.0+" vertical="middle" />"'},"​",-1),E=s("ul",null,[s("li",null,"可选项"),s("li",null,[i("类型："),s("code",null,"boolean | (() => boolean)")]),s("li",null,[i("说明：自定义 development 环境的判断。（插件内部会识别 "),s("code",null,"development"),i(" 环境以让插件生效，如果自动识别失败，需要手动指定）")])],-1),m={id:"enforcepre",tabindex:"-1"},F=s("a",{class:"header-anchor",href:"#enforcepre","aria-label":'Permalink to "enforcePre <Badge type="tip" text="0.4.0+" vertical="middle" />"'},"​",-1),A=n("<ul><li>可选项(仅对 <code>webpack/rspack</code> 生效)。默认值为 <code>true</code></li><li>类型：<code>boolean</code></li><li>说明：是否在转换时添加 <code>enforce: &#39;pre&#39;</code>，默认值为 <code>true</code>。（若因该插件引起了 <code>eslint-plugin</code> 校验错误或者热跟新时 eslint 的重复校验，需要此项设置为 <code>false</code>）。</li></ul>",1),v={id:"match",tabindex:"-1"},D=s("a",{class:"header-anchor",href:"#match","aria-label":'Permalink to "match <Badge type="tip" text="0.5.0+" vertical="middle" />"'},"​",-1),f=s("ul",null,[s("li",null,"可选项。用于提升编译时性能"),s("li",null,[i("类型："),s("code",null,"RegExp")]),s("li",null,[i("说明：仅对符合 "),s("code",null,"match"),i(" 正则表达式的文件会进行源码定位编译，以减少无效文件参与编译，默认为 "),s("code",null,"/\\.(vue|jsx|tsx|js|ts|mjs|mts)$/")])],-1),C={id:"pathformat",tabindex:"-1"},x=s("a",{class:"header-anchor",href:"#pathformat","aria-label":'Permalink to "pathFormat <Badge type="tip" text="0.8.0+" vertical="middle" />"'},"​",-1),T=n("<blockquote><p>团队协作时推荐在 <code>.env.local</code> 中使用 <code>CODE_INSPECTOR_FORMAT_PATH</code> 定义本功能，避免影响其他人使用</p></blockquote><ul><li>可选项</li><li>类型：<code>string | string[]</code></li><li>说明：指定打开 IDE 文件时的命令格式，默认值为 <code>{file}:{line}:{column}</code>，其中， <code>{file}</code>、<code>{line}</code>、<code>{column}</code> 会作为模版被动态替换。例如文件的源代码在 <code>/root/my-project/index.ts</code> 的第 <code>5</code> 行第 <code>11</code> 列，默认 vscode 执行的命令为 <code>code -g /root/my-project/index.ts:5:11</code>；如果我想只定位到对应的文件，不需要具体行列，且在文件最前面加上 <code>/Users</code> 参数，则应该设置此项值为 <code>&quot;/Users{file}&quot;</code>；如果我要额外添加 vscode 的参数去在新窗口打开，则设置此项值为 <code>[&quot;-n&quot;, &quot;/Users{file}&quot;]</code>。</li></ul>",2),B={id:"openin",tabindex:"-1"},P=s("a",{class:"header-anchor",href:"#openin","aria-label":'Permalink to "openIn <Badge type="tip" text="0.8.0+" vertical="middle" />"'},"​",-1),I=s("ul",null,[s("li",null,"可选项"),s("li",null,[i("类型："),s("code",null,"'reuse' | 'new'")]),s("li",null,[i("说明：指定打开 IDE 窗口的方式，默认会自动复用当前窗口，传 "),s("code",null,"reuse"),i(" 则复用当前窗口；传 "),s("code",null,"new"),i(" 则打开新窗口。")])],-1),S={id:"needenvinspector",tabindex:"-1"},q=s("a",{class:"header-anchor",href:"#needenvinspector","aria-label":'Permalink to "needEnvInspector <Badge type="danger" text="已废弃" vertical="middle" />"'},"​",-1),w=n('<ul><li>可选项。默认值为 <code>false</code></li><li>类型：<code>boolean</code></li><li>说明：对于大多数人可以忽略这个配置。为 <code>true</code> 时，仅当 <code>.env.local</code> 文件存在且其包含 <code>CODE_INSPECTOR=true</code> 时插件功能才生效。（主要是解决团队内有部分成员不想使用该插件功能的需求）</li></ul><h2 id="hideconsole" tabindex="-1">hideConsole <a class="header-anchor" href="#hideconsole" aria-label="Permalink to &quot;hideConsole&quot;">​</a></h2><ul><li>可选项。默认值为 <code>false</code></li><li>类型：<code>boolean</code></li><li>说明：默认情况下，插件在项目首次启动时会在浏览器控制台打印一行组合键按键的提示，设置此项为 <code>true</code> 可以禁用打印</li></ul>',3),V={id:"forceinjectcache",tabindex:"-1"},j=s("a",{class:"header-anchor",href:"#forceinjectcache","aria-label":'Permalink to "forceInjectCache <Badge type="danger" text="已废弃" vertical="middle" />"'},"​",-1),R=n("<ul><li>可选项(仅对 <code>webpack/rspack</code> 生效)。用于提升编译时性能</li><li>类型：<code>boolean</code></li><li>说明：强制设置 <code>webpack/rspack</code> 交互注入逻辑的 loader 的缓存策略；为 true 时全缓存；为 false 时全不缓存；不设置则自动判断仅对入口文件不缓存，其余文件缓存。(设置此项为 <code>true</code> 时，可能导致无法启动 node server 引起的代码定位请求失败，慎用)。<b>升级到 <code>0.5.1</code> 版本后，优化了该缓存策略，不再需要设置此字段。</b></li></ul>",1),N={id:"hooks",tabindex:"-1"},K=s("a",{class:"header-anchor",href:"#hooks","aria-label":'Permalink to "hooks <Badge type="tip" text="0.10.0+" vertical="middle" />"'},"​",-1),O=n(`<ul><li>可选项。默认值为 <code>null</code></li><li>类型如下：<div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SourceInfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  line</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  column</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Hooks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * server 端接收到 DOM 源代码定位请求后的钩子函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  afterInspectRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CodeInspectorOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">source</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SourceInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 例如</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">codeInspectorPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  bundler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  hooks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    afterInspectRequest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      console</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div></li><li>说明：设置 <code>code-inspector-plugin</code> 某些生命周期的 hooks 回调</li></ul>`,1),M={id:"escapetags",tabindex:"-1"},$=s("a",{class:"header-anchor",href:"#escapetags","aria-label":'Permalink to "escapeTags <Badge type="tip" text="0.11.0+" vertical="middle" />"'},"​",-1),U=s("ul",null,[s("li",null,"可选项"),s("li",null,[i("类型："),s("code",null,"(string | RegExp)[]")]),s("li",null,[i("说明：满足上述数组的标签，不会在编译时注入 "),s("code",null,"data-insp-path"),i(" 属性，以用于解决某些场景的告警问题。")])],-1),H={id:"hidedompathattr",tabindex:"-1"},J=s("a",{class:"header-anchor",href:"#hidedompathattr","aria-label":'Permalink to "hideDomPathAttr <Badge type="tip" text="0.12.0+" vertical="middle" />"'},"​",-1),z=s("ul",null,[s("li",null,"可选项"),s("li",null,[i("类型："),s("code",null,"boolean"),i("。默认值 "),s("code",null,"false")]),s("li",null,[i("说明：是否隐藏 DOM 元素上的 "),s("code",null,"data-insp-path"),i(" 属性")])],-1),G={id:"ip",tabindex:"-1"},L=s("a",{class:"header-anchor",href:"#ip","aria-label":'Permalink to "ip <Badge type="tip" text="0.13.0+" vertical="middle" />"'},"​",-1),Q=n("<ul><li>可选项</li><li>类型：<code>boolean | string</code>。默认值 <code>false</code></li><li>说明：是否通过 ip 的方式向 node server 发送请求。默认值为 <code>false</code>，通过 <code>localhost</code> 发送请求；设置为 <code>true</code> 时，会自动检测本地的 ip，通过 ip 发送请求；指定为 <code>string</code> 类型时，通过指定的值发送请求</li></ul>",1),W={id:"importclient",tabindex:"-1"},X=s("a",{class:"header-anchor",href:"#importclient","aria-label":'Permalink to "importClient <Badge type="tip" text="0.14.1+" vertical="middle" />"'},"​",-1),Y=s("ul",null,[s("li",null,"可选项"),s("li",null,[i("类型："),s("code",null,"string"),i("。默认值为 "),s("code",null,"file")]),s("li",null,[i("说明：引入客户端交互代码的方式: "),s("code",null,"file"),i(" 为引入交互代码所在的文件; "),s("code",null,"code"),i(" 为直接将交互代码注入页面。")])],-1);function Z(ss,is,es,as,ns,ls){const e=t("Badge");return p(),d("div",null,[h,s("h2",c,[i("behavior "),a(e,{type:"tip",text:"0.7.0+",vertical:"middle"}),i(),r]),k,s("h2",u,[i("injectTo "),a(e,{type:"tip",text:"0.5.0+",vertical:"middle"}),i(),_]),g,s("h2",b,[i("dev "),a(e,{type:"tip",text:"0.5.0+",vertical:"middle"}),i(),y]),E,s("h2",m,[i("enforcePre "),a(e,{type:"tip",text:"0.4.0+",vertical:"middle"}),i(),F]),A,s("h2",v,[i("match "),a(e,{type:"tip",text:"0.5.0+",vertical:"middle"}),i(),D]),f,s("h2",C,[i("pathFormat "),a(e,{type:"tip",text:"0.8.0+",vertical:"middle"}),i(),x]),T,s("h2",B,[i("openIn "),a(e,{type:"tip",text:"0.8.0+",vertical:"middle"}),i(),P]),I,s("h2",S,[i("needEnvInspector "),a(e,{type:"danger",text:"已废弃",vertical:"middle"}),i(),q]),w,s("h2",V,[i("forceInjectCache "),a(e,{type:"danger",text:"已废弃",vertical:"middle"}),i(),j]),R,s("h2",N,[i("hooks "),a(e,{type:"tip",text:"0.10.0+",vertical:"middle"}),i(),K]),O,s("h2",M,[i("escapeTags "),a(e,{type:"tip",text:"0.11.0+",vertical:"middle"}),i(),$]),U,s("h2",H,[i("hideDomPathAttr "),a(e,{type:"tip",text:"0.12.0+",vertical:"middle"}),i(),J]),z,s("h2",G,[i("ip "),a(e,{type:"tip",text:"0.13.0+",vertical:"middle"}),i(),L]),Q,s("h2",W,[i("importClient "),a(e,{type:"tip",text:"0.14.1+",vertical:"middle"}),i(),X]),Y])}const ds=l(o,[["render",Z]]);export{ps as __pageData,ds as default};
