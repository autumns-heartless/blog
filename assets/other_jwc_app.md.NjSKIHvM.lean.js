import{bQ as p,aM as o,w as d,x as e,J as s,L as n,I as t,bJ as c,aZ as i}from"./chunks/framework.CEg9tq01.js";const v=JSON.parse('{"title":"code-inspector 之 API","description":"","frontmatter":{"author":"井文超","title":"code-inspector 之 API","date":"2024/10/12","words":514,"duration":3,"categories":["uniapp"],"tags":["uniapp"]},"headers":[],"relativePath":"other/jwc/app.md","filePath":"other/jwc/app.md","lastUpdated":1728722098000}'),h={name:"other/jwc/app.md"};function u(b,a,k,g,m,E){const l=i("ArticleMetadata"),r=i("font");return o(),d("div",{"data-pagefind-body":!0},[a[3]||(a[3]=e("h1",{id:"_1-项目难点",tabindex:"-1"},[s("1.项目难点 "),e("a",{class:"header-anchor",href:"#_1-项目难点","aria-label":'Permalink to "1.项目难点"'},"​")],-1)),n(l,{article:{}}),a[4]||(a[4]=t('<h2 id="_1-1-高德地图用户定位-范围打卡" tabindex="-1">1.1.高德地图用户定位，范围打卡 <a class="header-anchor" href="#_1-1-高德地图用户定位-范围打卡" aria-label="Permalink to &quot;1.1.高德地图用户定位，范围打卡&quot;">​</a></h2><h3 id="_1-1-1-需求" tabindex="-1">1.1.1.需求 <a class="header-anchor" href="#_1-1-1-需求" aria-label="Permalink to &quot;1.1.1.需求&quot;">​</a></h3><p>获取用户所在位置和采集点以及采集范围，判断用户的位置是否在采集范围内，如果在就允许采集，不在则不允许</p><h3 id="_1-1-2-实现" tabindex="-1">1.1.2.实现 <a class="header-anchor" href="#_1-1-2-实现" aria-label="Permalink to &quot;1.1.2.实现&quot;">​</a></h3><h4 id="_1-1-2-1-定位" tabindex="-1">1.1.2.1.定位 <a class="header-anchor" href="#_1-1-2-1-定位" aria-label="Permalink to &quot;1.1.2.1.定位&quot;">​</a></h4><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uni.getLocation({ type: &quot;gcj02&quot;, //返回可以用于uni.openLocation的经纬度 geocode: true, success:</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">function (res) { that.loc.latitude = res.latitude; that.loc.longitude = res.longitude; that.address</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">`${res.address.province}${res.address.city}${res.address.district}${res.address.street}${res.address.streetNum}${res.address.poiName}${res.address.cityCode}`;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',6)),e("p",null,[a[1]||(a[1]=s("服务平台一定要选择")),n(r,{style:{color:"#DF2A3F"}},{default:c(()=>a[0]||(a[0]=[s("Android 平台")])),_:1}),a[2]||(a[2]=s("，否则 uni.getLocation({ type: 'gcj02' })不支持"))]),a[5]||(a[5]=t(`<p><img src="https://cdn.nlark.com/yuque/0/2024/png/38473181/1728715386688-8dd8ba98-cf9b-4dea-8f8f-c8fa5840579c.png" alt="" data-fancybox="gallery" loading="lazy"></p><p>选择完成之后在 manifest.json 的 App 模块配置即可</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/38473181/1728715634991-de4e37ff-541b-4732-a732-ead323fb5416.png" alt="" data-fancybox="gallery" loading="lazy"></p><p>:::color4 注意：这种方法只支持 Android app</p><p>:::</p><h4 id="_1-1-2-2-地图展示、范围打卡" tabindex="-1">1.1.2.2.地图展示、范围打卡 <a class="header-anchor" href="#_1-1-2-2-地图展示、范围打卡" aria-label="Permalink to &quot;1.1.2.2.地图展示、范围打卡&quot;">​</a></h4><p>采集点位置经纬度、采集点范围、用户位置经纬度都获取到了</p><p>接下来只需要计算两个经纬度直接的距离然后判断它是否大于这个采集范围的圆的半径</p><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// 计算两个经纬度点之间的距离（单位：米） calculateDistance(lat1, lon1, lat2, lon2) { const toRad =</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value) =&gt; (value * Math.PI) / 180; const R = 6371000; // 地球半径，单位：米 const dLat = toRad(lat2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- lat1); const dLon = toRad(lon2 - lon1); const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2); const c = 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">* Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)); return R * c; },</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// 判断点是否在圆内 const distance = this.calculateDistance( op.latitude, op.longitude,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">op.clatitude, op.clongitude ); if (distance &gt; op.radius) { uni.showToast({ title:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&quot;您当前的位置不在采集点范围内&quot;, icon: &quot;none&quot;, }); return }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_1-2-地图搜索选点" tabindex="-1">1.2.地图搜索选点 <a class="header-anchor" href="#_1-2-地图搜索选点" aria-label="Permalink to &quot;1.2.地图搜索选点&quot;">​</a></h2><p>直接上链接，好用哈哈哈哈哈</p><p><a href="https://ext.dcloud.net.cn/plugin?id=16882" target="_blank" rel="noreferrer">高德地图--地图选点插件 - DCloud 插件市场</a></p><h2 id="_1-3-全局悬浮窗" tabindex="-1">1.3.全局悬浮窗 <a class="header-anchor" href="#_1-3-全局悬浮窗" aria-label="Permalink to &quot;1.3.全局悬浮窗&quot;">​</a></h2><p>都很好用哇，记录一下</p><p><a href="https://ext.dcloud.net.cn/plugin?id=16026" target="_blank" rel="noreferrer">全局悬浮按钮拖拽框自动吸边自定义图片等 - DCloud 插件市场</a></p><p><a href="https://ext.dcloud.net.cn/plugin?id=16264" target="_blank" rel="noreferrer">全局悬浮球悬浮按钮可拖动自动吸边 - DCloud 插件市场</a></p>`,17))])}const y=p(h,[["render",u]]);export{v as __pageData,y as default};
